hospital_assignment <- function(match_matrix) {
# chop up the matrix into students and hospitals
n <- nrow(match_matrix)/2
available_hospitals <- 1:n
available_students <- (n+1):(2*n)
# create empty matrix to fill with matches
matched_pairs <- matrix(, ncol = 2, byrow = T)
colnames(matched_pairs) <- c("hospital", "student")
#iterate through remaining hospitals
while(length(available_hospitals) > 0) {
# identify the index of hospital that's next in line
# for matching
hospital_index <- available_hospitals[1]
# get the priority students for this hospital from
# the matrix
priority_students <- match_matrix[hospital_index,]
# among the students, remove those that are already matched
# then just select the first in line
student_index <- priority_students[which(priority_students %in% available_students)][1]
# for the selected student, get their priority schools
priority_hospitals <- match_matrix[student_index,]
# for the priority schools for this student, get the alternative school among those remaining
alternative_hospital_index <- priority_hospitals[which(priority_hospitals %in% available_hospitals)][1]
# for the alternative hospital who is their next up student in priority
alternative_priority_students <- match_matrix[alternative_hospital_index,]
alternative_student_index <- alternative_priority_students[which(alternative_priority_students %in% available_students)][1]
# if the student's priority school also has them as their #1 selection
# then flip the current index to that school and we will record this as
# a match
if (isTRUE(student_index == alternative_student_index)) {
hospital_index <- alternative_hospital_index
}
# combine our new pair with the matched matrix
matched_pairs <- rbind(
matched_pairs,
matrix(
c(hospital_index, student_index),
ncol = 2,
byrow = T
)
)
# lastly remove the two matches from the available students and hospitals
available_hospitals <- available_hospitals[-which(available_hospitals == hospital_index)]
available_students <- available_students[which(!available_students %in% student_index)]
}
return(matched_pairs[-1,])
}
hospital_assignment(match_matrix)
test <- hospital_assignment(match_matrix)
test[order[1],]
test[order(test[1]),]
test[order(test[1,]),]
test[order(test[,1]),]
hospital_assignment <- function(match_matrix) {
# chop up the matrix into students and hospitals
n <- nrow(match_matrix)/2
available_hospitals <- 1:n
available_students <- (n+1):(2*n)
# create empty matrix to fill with matches
matched_pairs <- matrix(, ncol = 2, byrow = T)
colnames(matched_pairs) <- c("hospital", "student")
#iterate through remaining hospitals
while(length(available_hospitals) > 0) {
# identify the index of hospital that's next in line
# for matching
hospital_index <- available_hospitals[1]
# get the priority students for this hospital from
# the matrix
priority_students <- match_matrix[hospital_index,]
# among the students, remove those that are already matched
# then just select the first in line
student_index <- priority_students[which(priority_students %in% available_students)][1]
# for the selected student, get their priority schools
priority_hospitals <- match_matrix[student_index,]
# for the priority schools for this student, get the alternative school among those remaining
alternative_hospital_index <- priority_hospitals[which(priority_hospitals %in% available_hospitals)][1]
# for the alternative hospital who is their next up student in priority
alternative_priority_students <- match_matrix[alternative_hospital_index,]
alternative_student_index <- alternative_priority_students[which(alternative_priority_students %in% available_students)][1]
# if the student's priority school also has them as their #1 selection
# then flip the current index to that school and we will record this as
# a match
if (isTRUE(student_index == alternative_student_index)) {
hospital_index <- alternative_hospital_index
}
# combine our new pair with the matched matrix
matched_pairs <- rbind(
matched_pairs,
matrix(
c(hospital_index, student_index),
ncol = 2,
byrow = T
)
)
# lastly remove the two matches from the available students and hospitals
available_hospitals <- available_hospitals[-which(available_hospitals == hospital_index)]
available_students <- available_students[which(!available_students %in% student_index)]
}
#remove null row and order on first column
matched_pairs <- matched_pairs[-1,]
matched_pairs <- matched_pairs[order(matched_pairs[,1]),]
return(matched_pairs)
}
set.seed(123)
num_of_matches <- 5
pref_list <- t(
cbind(
replicate(num_of_matches, sample((num_of_matches+1):(2*num_of_matches))),
replicate(num_of_matches, sample(1:num_of_matches, num_of_matches))
)
)
print(pref_list)
View(pref_list)
print(pref_list)
hospital_assignment(pref_list)
num_of_matches <- 4
pref_list <- t(
cbind(
replicate(num_of_matches, sample((num_of_matches+1):(2*num_of_matches))),
replicate(num_of_matches, sample(1:num_of_matches, num_of_matches))
)
)
print(pref_list)
View(pref_list)
print(pref_list)
hospital_assignment(pref_list)
set.seed(123)
num_of_matches <- 4
pref_list <- t(
cbind(
replicate(num_of_matches, sample((num_of_matches+1):(2*num_of_matches))),
replicate(num_of_matches, sample(1:num_of_matches, num_of_matches))
)
)
# 1: 1, 5
# 2: 2, 7
# 3: 3, 8
# 4: 4, 6
# [3,] 8, 6
# [4,] 8, 6
# [6,] 4, 3
# [8,] 4, 3
print(pref_list)
hospital_assignment(pref_list)
set.seed(123)
num_of_matches <- 4
pref_list <- t(
cbind(
replicate(num_of_matches, sample((num_of_matches+1):(2*num_of_matches))),
replicate(num_of_matches, sample(1:num_of_matches, num_of_matches))
)
)
# 1: 1, 5
# 2: 2, 7
# 3: 3, 8
# 4: 4, 6
# [3,] 8, 6
# [4,] 8, 6
# [6,] 4, 3
# [8,] 4, 3
print(pref_list)
hospital_assignment(pref_list)
set.seed(123)
num_of_matches <- 4
pref_list <- t(
cbind(
replicate(num_of_matches, sample((num_of_matches+1):(2*num_of_matches))),
replicate(num_of_matches, sample(1:num_of_matches, num_of_matches))
)
)
# 1: 1, 5
# 2: 2, 7
# 3: 3, 8
# 4: 4, 6
# [3,] 8, 6
# [4,] 8, 6
# [6,] 4, 3
# [8,] 4, 3
print(pref_list)
hospital_assignment(pref_list)
set.seed(123)
num_of_matches <- 4
pref_list <- t(
cbind(
replicate(num_of_matches, sample((num_of_matches+1):(2*num_of_matches))),
replicate(num_of_matches, sample(1:num_of_matches, num_of_matches))
)
)
# 1: 1, 5
# 2: 2, 7
# 3: 3, 8
# 4: 4, 6
# [3,] 8, 6
# [4,] 8, 6
# [6,] 4, 3
# [8,] 4, 3
print(pref_list)
hospital_assignment(pref_list)
pref_list <- matrix(
c(
8, 7, 10, 9, 6,
8, 6, 7, 10, 9,
7, 8, 6, 9, 10,
6, 9, 10, 8, 7,
8, 9, 7, 6, 10,
1, 2, 3, 4, 5,
1, 3, 4, 5, 2,
2, 1, 3, 4, 5,
2, 3, 4, 5, 1,
5, 3, 2, 1, 4
),
nrow = 10,
ncol = 5,
byrow = T
)
hospital_assignment(pref_list)
set.seed(123)
num_of_matches <- 4
pref_list <- t(
cbind(
replicate(num_of_matches, sample((num_of_matches+1):(2*num_of_matches))),
replicate(num_of_matches, sample(1:num_of_matches, num_of_matches))
)
)
print(pref_list)
hospital_assignment(pref_list)
match_matrix <- matrix(c(4,5,6,5,4,6,4,6,5,2,1,3,3,2,1,1,2,3), nrow = 6, ncol = 3, byrow = T)
match_matrix <- matrix(c(4,5,6,5,4,6,4,6,5,2,1,3,3,2,1,1,2,3), nrow = 6, ncol = 3, byrow = T)
# chop up the matrix into students and hospitals
n <- nrow(match_matrix)/2
available_hospitals <- 1:n
available_students <- (n+1):(2*n)
# create empty matrix to fill with matches
matched_pairs <- matrix(, ncol = 2, byrow = T)
colnames(matched_pairs) <- c("hospital", "student")
# identify the index of hospital that's next in line
# for matching
hospital_index <- available_hospitals[1]
# get the priority students for this hospital from
# the matrix
priority_students <- match_matrix[hospital_index,]
# among the students, remove those that are already matched
# then just select the first in line
student_index <- priority_students[which(priority_students %in% available_students)][1]
# for the selected student, get their priority schools
priority_hospitals <- match_matrix[student_index,]
# for the priority schools for this student, get the alternative school
# (ie their first choice) among those remaining
alternative_hospital_index <- priority_hospitals[which(priority_hospitals %in% available_hospitals)][1]
# for the priority schools for this student, get the alternative school
# (ie their first choice) among those remaining
alternative_hospital_index <- priority_hospitals[which(priority_hospitals %in% available_hospitals)][1]
# for the alternative hospital who is their next up student in priority among
# the students that are available
alternative_priority_students <- match_matrix[alternative_hospital_index,]
alternative_student_index <- alternative_priority_students[which(alternative_priority_students %in% available_students)][1]
isTRUE(student_index == alternative_student_index)
match_matrix <- matrix(c(4,5,6,5,4,6,4,6,5,2,1,3,3,2,1,1,2,3), nrow = 6, ncol = 3, byrow = T)
# chop up the matrix into students and hospitals
n <- nrow(match_matrix)/2
available_hospitals <- 1:n
available_students <- (n+1):(2*n)
# create empty matrix to fill with matches
matched_pairs <- matrix(, ncol = 2, byrow = T)
colnames(matched_pairs) <- c("hospital", "student")
# identify the index of hospital that's next in line
# for matching
hospital_index <- available_hospitals[1]
# get the priority students for this hospital from
# the matrix
priority_students <- match_matrix[hospital_index,]
# among the students, remove those that are already matched
# then just select the first in line
student_index <- priority_students[which(priority_students %in% available_students)][1]
# for the selected student, get their priority schools
priority_hospitals <- match_matrix[student_index,]
# for the priority schools for this student, get the alternative school
# (ie their first choice) among those remaining
alternative_hospital_index <- priority_hospitals[which(priority_hospitals %in% available_hospitals)][1]
# for the alternative hospital who is their next up student in priority among
# the students that are available
alternative_priority_students <- match_matrix[alternative_hospital_index,]
alternative_student_index <- alternative_priority_students[which(alternative_priority_students %in% available_students)][1]
# if the student's priority school also has them as their #1 remaining selection
# then flip the current index to that school and we will record this as
# a match
if (isTRUE(student_index == alternative_student_index)) {
hospital_index <- alternative_hospital_index
}
# combine our new pair with the matched matrix
matched_pairs <- rbind(
matched_pairs,
matrix(
c(hospital_index, student_index),
ncol = 2,
byrow = T
)
)
# lastly remove the two matches from the available students and hospitals
available_hospitals <- available_hospitals[-which(available_hospitals == hospital_index)]
available_students <- available_students[which(!available_students %in% student_index)]
set.seed(123)
num_of_matches <- 4
pref_list <- t(
cbind(
replicate(num_of_matches, sample((num_of_matches+1):(2*num_of_matches))),
replicate(num_of_matches, sample(1:num_of_matches, num_of_matches))
)
)
print(pref_list)
set.seed(123)
num_of_matches <- 4
pref_list <- t(
cbind(
replicate(num_of_matches, sample((num_of_matches+1):(2*num_of_matches))),
replicate(num_of_matches, sample(1:num_of_matches, num_of_matches))
)
)
print(pref_list)
hospital_assignment(pref_list)
hospital_assignment <- function(match_matrix) {
# chop up the matrix into students and hospitals
n <- nrow(match_matrix)/2
available_hospitals <- 1:n
available_students <- (n+1):(2*n)
# create empty matrix to fill with matches
matched_pairs <- matrix(, ncol = 2, byrow = T)
colnames(matched_pairs) <- c("hospital", "student")
#iterate through remaining hospitals
while(length(available_hospitals) > 0) {
# identify the index of hospital that's next in line
# for matching
hospital_index <- available_hospitals[1]
# get the priority students for this hospital from
# the matrix
priority_students <- match_matrix[hospital_index,]
# among the students, remove those that are already matched
# then just select the first in line
student_index <- priority_students[which(priority_students %in% available_students)][1]
# for the selected student, get their priority schools
priority_hospitals <- match_matrix[student_index,]
# for the priority schools for this student, get the alternative school
# (ie their first choice) among those remaining
alternative_hospital_index <- priority_hospitals[which(priority_hospitals %in% available_hospitals)][1]
# for the alternative hospital who is their next up student in priority among
# the students that are available
alternative_priority_students <- match_matrix[alternative_hospital_index,]
alternative_student_index <- alternative_priority_students[which(alternative_priority_students %in% available_students)][1]
# if the student's priority school also has them as their #1 remaining selection
# then flip the current index to that school and we will record this as
# a match
if (isTRUE(student_index == alternative_student_index)) {
hospital_index <- alternative_hospital_index
}
# combine our new pair with the matched matrix
matched_pairs <- rbind(
matched_pairs,
matrix(
c(hospital_index, student_index),
ncol = 2,
byrow = T
)
)
# lastly remove the two matches from the available students and hospitals
available_hospitals <- available_hospitals[-which(available_hospitals == hospital_index)]
available_students <- available_students[which(!available_students %in% student_index)]
}
#remove null row and order on first column
matched_pairs <- matched_pairs[-1,]
matched_pairs <- matched_pairs[order(matched_pairs[,1]),]
return(matched_pairs)
}
set.seed(123)
num_of_matches <- 4
pref_list <- t(
cbind(
replicate(num_of_matches, sample((num_of_matches+1):(2*num_of_matches))),
replicate(num_of_matches, sample(1:num_of_matches, num_of_matches))
)
)
print(pref_list)
hospital_assignment(pref_list)
View(pref_list)
pref_list <- matrix(
c(
5, 6, 7, 8,
6, 7, 8, 5,
7, 8, 5, 6,
5, 7, 8, 6,
1, 2, 3, 4,
1, 2, 3, 4,
3, 4, 1, 2,
1, 3, 4, 2
),
nrow = 10,
ncol = 5,
byrow = T
)
pref_list <- matrix(
c(
5, 6, 7, 8,
6, 7, 8, 5,
7, 8, 5, 6,
5, 7, 8, 6,
1, 2, 3, 4,
1, 2, 3, 4,
3, 4, 1, 2,
1, 3, 4, 2
),
nrow = 8,
ncol = 4,
byrow = T
)
print(pref_list)
hospital_assignment(pref_list)
pref_list <- matrix(
c(
5, 6, 7, 8,
6, 7, 8, 5,
7, 8, 5, 6,
5, 7, 8, 6,
1, 2, 3, 4,
1, 2, 3, 4,
1, 3, 4, 2,
3, 4, 1, 2
),
nrow = 8,
ncol = 4,
byrow = T
)
print(pref_list)
hospital_assignment(pref_list)
pref_list <- matrix(
c(
5, 6, 7, 8,
7, 8, 5, 6,
5, 7, 8, 6,
6, 7, 8, 5,
1, 2, 3, 4,
1, 3, 4, 2,
3, 4, 1, 2,
1, 2, 3, 4
),
nrow = 8,
ncol = 4,
byrow = T
)
print(pref_list)
hospital_assignment(pref_list)
set.seed(123)
num_of_matches <- 4
pref_list <- t(
cbind(
replicate(num_of_matches, sample((num_of_matches+1):(2*num_of_matches))),
replicate(num_of_matches, sample(1:num_of_matches, num_of_matches))
)
)
print(pref_list)
hospital_assignment(pref_list)
pref_list <- matrix(
c(
8, 7, 10, 9, 6,
8, 6, 7, 10, 9,
7, 8, 6, 9, 10,
6, 9, 10, 8, 7,
8, 9, 7, 6, 10,
1, 2, 3, 4, 5,
1, 3, 4, 5, 2,
2, 1, 3, 4, 5,
2, 3, 4, 5, 1,
5, 3, 2, 1, 4
),
nrow = 10,
ncol = 5,
byrow = T
)
hospital_assignment(pref_list)
pref_list <- matrix(
c(
5, 6, 7, 8,
5, 6, 8, 7,
6, 7, 8, 5,
7, 8, 6, 5,
2, 1, 3, 4,
1, 2, 4, 3,
1, 4, 3, 2,
1, 2, 4, 3
),
nrow = 8,
ncol = 4,
byrow = T
)
print(pref_list)
hospital_assignment(pref_list)
pref_list <- matrix(
c(
5, 6, 7, 8, # 1
5, 6, 8, 7, # 2
6, 7, 8, 5, # 3
7, 8, 6, 5, # 4
2, 1, 3, 4, # 5
1, 2, 4, 3, # 6
1, 2,3, 4,  # 7
1, 2, 4, 3  # 8
),
nrow = 8,
ncol = 4,
byrow = T
)
print(pref_list)
print(pref_list)
hospital_assignment(pref_list)
